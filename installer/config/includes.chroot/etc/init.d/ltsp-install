#! /bin/sh


#BOOT_IMAGES_URL="http://172.16.42.110/boot-images"
LTSP_IMAGES_URL="http://172.16.42.10/ltsp-images"

if test -f /etc/default/ltsp-install; then
  . /etc/default/ltsp-install
fi

MNT="/mnt"
IMAGES="ltsp-images"

do_install()
{


echo
echo "=================Attention===================="
echo 
echo "This Programm destroys your Disk. Typ \"I know this\" to continue!"
echo
read ANS

if ! test "$ANS" = "I know this";then exit 1;fi


  if test -d /mnt/boot; then
    echo 
    echo "It look like the system is already installed!"
    echo -n "Do you want to overwrite your installation (Yes/No) "
    read ANS
    if test "$ANS" != "Yes"; then exit 1;fi
  fi


# install bootserver


echo
echo "Found the following disks:"
cat /proc/partitions
echo

RET=true
while $RET; do 

  echo -n "Your choice (or quit)? "
  read DISK

  if test "$DISK" = "quit"; then exit 1;fi

  if test -z "$DISK"; then DISK="no disk"; fi
 
  if cat /proc/partitions|grep -q "${DISK}$"; then

    echo
    echo "!!!!! Your are about to erease  $DISK   !!!!!"
    echo 
    echo -n "Do you want to continue? (Yes/No) "
    read ANS

    case $ANS in
      Yes)
       #echo "Yes"
       RET=false
       ;;
      No)
       #echo "No"
       exit
       ;;
      *)
       echo "Answer Yes or No!"
       ;;
    esac
  else
   RET=true
  fi
done


umount /dev/${DISK}1
umount /dev/${DISK}2



parted --align optimal --script /dev/${DISK} -- mklabel msdos

parted --align optimal --script /dev/${DISK} -- mkpart primary 2048s 8G
parted --align optimal --script /dev/${DISK} -- set 1 boot on
parted --align optimal --script /dev/${DISK} -- mkpart primary 8G 95%

umount /dev/${DISK}1
umount /dev/${DISK}2

mkfs.ext4 -L ${IMAGES} /dev/${DISK}1
mkfs.ext4 -L ltsp-local /dev/${DISK}2


if ! test -d ${MNT}/part1;then mkdir ${MNT}/part1;fi
if mount /dev/${DISK}1 ${MNT}/part1; then
    # install grub
    grub-install --force --root-directory=${MNT}/part1 /dev/${DISK}
    if cd ${MNT}/part1/boot/grub/; then
      cp /var/lib/andrijn/grug.cfg .
      #wget ${BOOT_IMAGES_URL}/grub.cfg
      echo -n ""
    else
      echo "could not cd /mnt/part1/boot/grub"
    fi

    # install initial boot-image
    mkdir ${MNT}/part1/${IMAGES}/
    if cd ${MNT}/part1/${IMAGES}/; then
       if $0 sync; then
          echo "Syncing ok! Your sytem is ready now."
       else
          echo "Syncing not ok! Try later : sudo service ltsp-install sync."
       fi 
    else
       echo "could not cd /mnt/part1/boot-images"
    fi
else
  echo "could not mount /dev/${DISK}1"
fi


if ! test -d ${MNT}/part2;then mkdir ${MNT}/part2;fi
if mount /dev/${DISK}2 ${MNT}/part2; then
    echo "/etc/cups/" > ${MNT}/part2/persistence.conf
fi



sleep 5
umount ${MNT}/part1
umount ${MNT}/part2


sleep 5
umount ${MNT}/part1
umount ${MNT}/part2


 
}


do_sync()
{

  URL=$1

  cd $2

  TYPE=$3

  if test -f version; then
    VERSION=$(cat version)
  else
    VERSION=0
    touch version
    echo "0" > version
  fi

  VERSION_neu="$(wget -O - ${URL}/version 2>/dev/null)"

  if test -n "$VERSION_neu"; then 
 
    if test "$VERSION"  = "$VERSION_neu"; then
      echo "nothing to do"
    else
      echo "copy $(printf "%06i.*" $VERSION) to $(printf "%06i.*" $VERSION_neu)..."
      if test -f $(printf "%06i" $VERSION).$TYPE; then
        cp $(printf "%06i" $VERSION).$TYPE $(printf "%06i" $VERSION_neu).$TYPE
      else
        touch  $(printf "%06i" $VERSION_neu).$TYPE
      fi

      echo "zsync..." 
      if zsync "${URL}/$(printf "%06i" $VERSION_neu).${TYPE}.zsync"; then
       
        if test "$TYPE" = "iso"; then
          wget -O ${MNT}/${IMAGES}/boot/grub/grub.cfg ${URL}/grub.cfg
        fi


        # sync meta info
        rm version
        wget ${URL}/version

        rm *-$TYPE-*
        touch old-$TYPE-$(printf "%06i" $VERSION)
        touch cur-$TYPE-$(printf "%06i" $VERSION_neu)
        touch nxt-$TYPE-$(printf "%06i" $VERSION_neu)


        #remove old images
        echo "remove oldies"
        if test -f $(printf "%06i" $(( $VERSION -3 ))).$TYPE; then
          rm $(printf "%06i.*" $(( $VERSION -3 )))
        fi
        if test -f *.zs-old; then 
          rm *.zs-old 
        fi

        echo "$VERSION_neu" > version

        echo "ok"
      fi #zsync
    fi # version neu
  fi 
}



#
# Function that starts the daemon/service
#
do_start()
{
  if ! test -d ${MNT}/${IMAGES}; then mkdir ${MNT}/${IMAGES};fi
  
  if mount -L ${IMAGES} ${MNT}/${IMAGES} 2>/dev/null >/dev/null; then
    DISK=
    echo "Use: \"sudo service ltsp-install [restore|backup|sync]\" to manage LTSP-Workstation"
  else
    echo "Use: \"sudo service ltsp-install install\" to install LTSP-Workstation"
  fi 
} 


#
# Function that stops the daemon/service
#
do_stop()
{
  umount ${MNT}/${IMAGES}
}




  case "$1" in
    install)
        do_install
        do_start
        ;;
    sync)
        echo "do_sync ${LTSP_IMAGES_URL} ${MNT}/${IMAGES}/${IMAGES} img"
        if test -d ${MNT}/${IMAGES}/${IMAGES}; then 
            do_sync ${LTSP_IMAGES_URL} ${MNT}/${IMAGES}/${IMAGES} img
            echo "done"
        else
            echo "ltsp-images is not mounted"
        fi
        ;;
    backup)
        echo "not implemented yet" 
	;;
    restore)
        echo "not implemented yet"
        ;;
    start)
        if ! test -d ${NMT}/${IMAGES}/${IMAGES}; then
          echo "starting"
          do_start
        else
          echo "already started"
        fi
        ;;
    stop)
        if test -d ${NMT}/${IMAGES}/${IMAGES}; then
          echo "stopping"
          do_stop
        else
          echo "already stopped"
        fi
        ;;
    *)
	echo "Usage: $SCRIPTNAME {backup|restore|install|sync|start|stop}" >&2
	exit 3
	;;
  esac

  exit 

